816a254c (migunasekera      2019-03-04 19:06:42 -0500   1) //var smart = FHIR.client(config);
816a254c (migunasekera      2019-03-04 19:06:42 -0500   2) //var code = document.getElementById("code").value;
816a254c (migunasekera      2019-03-04 19:06:42 -0500   3) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500   4) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500   5) var str,
816a254c (migunasekera      2019-03-04 19:06:42 -0500   6) element = document.getElementById('code');
816a254c (migunasekera      2019-03-04 19:06:42 -0500   7) if (element != null) {
816a254c (migunasekera      2019-03-04 19:06:42 -0500   8)     str = element.value;
816a254c (migunasekera      2019-03-04 19:06:42 -0500   9) }
816a254c (migunasekera      2019-03-04 19:06:42 -0500  10) else {
816a254c (migunasekera      2019-03-04 19:06:42 -0500  11)     str = null;
816a254c (migunasekera      2019-03-04 19:06:42 -0500  12) }
816a254c (migunasekera      2019-03-04 19:06:42 -0500  13) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500  14) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500  15) function sleep(milliseconds) {
816a254c (migunasekera      2019-03-04 19:06:42 -0500  16)   var start = new Date().getTime();
816a254c (migunasekera      2019-03-04 19:06:42 -0500  17)   for (var i = 0; i < 1e7; i++) {
816a254c (migunasekera      2019-03-04 19:06:42 -0500  18)     if ((new Date().getTime() - start) > milliseconds){
816a254c (migunasekera      2019-03-04 19:06:42 -0500  19)       break;
816a254c (migunasekera      2019-03-04 19:06:42 -0500  20)     }
816a254c (migunasekera      2019-03-04 19:06:42 -0500  21)   }
816a254c (migunasekera      2019-03-04 19:06:42 -0500  22) }
816a254c (migunasekera      2019-03-04 19:06:42 -0500  23) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500  24) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500  25) function mainfxn(){
816a254c (migunasekera      2019-03-04 19:06:42 -0500  26)   
816a254c (migunasekera      2019-03-04 19:06:42 -0500  27)   var id = [
816a254c (migunasekera      2019-03-04 19:06:42 -0500  28)     'smart-1577780',
816a254c (migunasekera      2019-03-04 19:06:42 -0500  29)     'smart-765583',
816a254c (migunasekera      2019-03-04 19:06:42 -0500  30)     'smart-1291938',
816a254c (migunasekera      2019-03-04 19:06:42 -0500  31)     'smart-1157764'
816a254c (migunasekera      2019-03-04 19:06:42 -0500  32)   ] // Patients who experience breast cancer due to "Malignant neoplasm of breast (disorder)" SNOMED-CT: 254837009
816a254c (migunasekera      2019-03-04 19:06:42 -0500  33) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500  34)   var meds =
816a254c (migunasekera      2019-03-04 19:06:42 -0500  35) 	{
816a254c (migunasekera      2019-03-04 19:06:42 -0500  36)     type: "MedicationDispense",
816a254c (migunasekera      2019-03-04 19:06:42 -0500  37) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500  38)     // type: "MedicationRequest" // I could pull the same information, but MedicationDispense is a lot more reliable (less empty medication names)
816a254c (migunasekera      2019-03-04 19:06:42 -0500  39)   }; // Medication request search
816a254c (migunasekera      2019-03-04 19:06:42 -0500  40)   
816a254c (migunasekera      2019-03-04 19:06:42 -0500  41)   document.getElementById("patient_info").innerHTML = ""; // This clears the div
816a254c (migunasekera      2019-03-04 19:06:42 -0500  42)   // var delayInMilliseconds = 5000;
816a254c (migunasekera      2019-03-04 19:06:42 -0500  43)   document.getElementById("patient_info").innerHTML += 'Patients'
816a254c (migunasekera      2019-03-04 19:06:42 -0500  44)   
816a254c (migunasekera      2019-03-04 19:06:42 -0500  45)   for (i=0; i < id.length; i++){
816a254c (migunasekera      2019-03-04 19:06:42 -0500  46) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500  47)     
816a254c (migunasekera      2019-03-04 19:06:42 -0500  48)     document.getElementById("patient_info").innerHTML += '<h4> Patient id#: ' + id[i].replace("smart-","") + '</h4>';
816a254c (migunasekera      2019-03-04 19:06:42 -0500  49)     
816a254c (migunasekera      2019-03-04 19:06:42 -0500  50)     // console.log(smart);
816a254c (migunasekera      2019-03-04 19:06:42 -0500  51)     // console.log(smart.patient.api.search(meds))
816a254c (migunasekera      2019-03-04 19:06:42 -0500  52)     // smart = getIdentifier(id[i]).then(
816a254c (migunasekera      2019-03-04 19:06:42 -0500  53)       console.log(id[i])
816a254c (migunasekera      2019-03-04 19:06:42 -0500  54)       // console.log(callPatient)
816a254c (migunasekera      2019-03-04 19:06:42 -0500  55)       
816a254c (migunasekera      2019-03-04 19:06:42 -0500  56) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500  57) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500  58)       var smart = new FHIR.client({
816a254c (migunasekera      2019-03-04 19:06:42 -0500  59)         serviceUrl: 'https://r3.smarthealthit.org',
816a254c (migunasekera      2019-03-04 19:06:42 -0500  60)         patientId: id[i]
816a254c (migunasekera      2019-03-04 19:06:42 -0500  61)         }
816a254c (migunasekera      2019-03-04 19:06:42 -0500  62)       )
816a254c (migunasekera      2019-03-04 19:06:42 -0500  63)       var pq = smart.patient.read();
816a254c (migunasekera      2019-03-04 19:06:42 -0500  64)       
816a254c (migunasekera      2019-03-04 19:06:42 -0500  65)       
816a254c (migunasekera      2019-03-04 19:06:42 -0500  66)       
816a254c (migunasekera      2019-03-04 19:06:42 -0500  67)       // console.log(smart.patient.api.search(meds))
816a254c (migunasekera      2019-03-04 19:06:42 -0500  68)       // smart.patient.api.search(meds).done((res)=>{
816a254c (migunasekera      2019-03-04 19:06:42 -0500  69)       //   console.log("BOB", res)
816a254c (migunasekera      2019-03-04 19:06:42 -0500  70)         
816a254c (migunasekera      2019-03-04 19:06:42 -0500  71)       // })
816a254c (migunasekera      2019-03-04 19:06:42 -0500  72)       
816a254c (migunasekera      2019-03-04 19:06:42 -0500  73)       smart.patient.api.search({type: "MedicationDispense", query: {patient:smart.patientId}
816a254c (migunasekera      2019-03-04 19:06:42 -0500  74)         }).then(listMedications)
816a254c (migunasekera      2019-03-04 19:06:42 -0500  75)       // sleep(1000);  
816a254c (migunasekera      2019-03-04 19:06:42 -0500  76) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500  77)       function listMedications(m){
816a254c (migunasekera      2019-03-04 19:06:42 -0500  78)         
816a254c (migunasekera      2019-03-04 19:06:42 -0500  79)         console.log(i)
816a254c (migunasekera      2019-03-04 19:06:42 -0500  80)         
816a254c (migunasekera      2019-03-04 19:06:42 -0500  81)         if(m.data.entry != undefined){
816a254c (migunasekera      2019-03-04 19:06:42 -0500  82) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500  83)           document.getElementById("patient_info").innerHTML += '<i>' + 'Medications' + '</i>'
816a254c (migunasekera      2019-03-04 19:06:42 -0500  84)           
816a254c (migunasekera      2019-03-04 19:06:42 -0500  85) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500  86)         var entries = m.data.entry;
816a254c (migunasekera      2019-03-04 19:06:42 -0500  87)         console.log(entries);
816a254c (migunasekera      2019-03-04 19:06:42 -0500  88) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500  89)         
816a254c (migunasekera      2019-03-04 19:06:42 -0500  90)         document.getElementById("patient_info").innerHTML += '<ul>';
816a254c (migunasekera      2019-03-04 19:06:42 -0500  91)         
816a254c (migunasekera      2019-03-04 19:06:42 -0500  92)         for (j = 0; j < entries.length; j++){         
816a254c (migunasekera      2019-03-04 19:06:42 -0500  93)           
816a254c (migunasekera      2019-03-04 19:06:42 -0500  94)           bulletPoint(getMedicationInfo(entries[j]))
816a254c (migunasekera      2019-03-04 19:06:42 -0500  95) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500  96)           
816a254c (migunasekera      2019-03-04 19:06:42 -0500  97)         };
816a254c (migunasekera      2019-03-04 19:06:42 -0500  98)         document.getElementById("patient_info").innerHTML += '</ul>';
816a254c (migunasekera      2019-03-04 19:06:42 -0500  99)       }
816a254c (migunasekera      2019-03-04 19:06:42 -0500 100)       else{
816a254c (migunasekera      2019-03-04 19:06:42 -0500 101)         console.log("This did not return anything");
816a254c (migunasekera      2019-03-04 19:06:42 -0500 102)       }
816a254c (migunasekera      2019-03-04 19:06:42 -0500 103)       document.getElementById("patient_info").innerHTML += '<br> </br>';
816a254c (migunasekera      2019-03-04 19:06:42 -0500 104) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500 105) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500 106)       }
816a254c (migunasekera      2019-03-04 19:06:42 -0500 107)     
816a254c (migunasekera      2019-03-04 19:06:42 -0500 108)   }
816a254c (migunasekera      2019-03-04 19:06:42 -0500 109)   sleep(1000);
816a254c (migunasekera      2019-03-04 19:06:42 -0500 110) //   function startTimer () {
816a254c (migunasekera      2019-03-04 19:06:42 -0500 111) //     timer.start();
816a254c (migunasekera      2019-03-04 19:06:42 -0500 112) //     setTimeout(stopTimer,5000);
816a254c (migunasekera      2019-03-04 19:06:42 -0500 113) // }
816a254c (migunasekera      2019-03-04 19:06:42 -0500 114) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500 115) // function stopTimer () {
816a254c (migunasekera      2019-03-04 19:06:42 -0500 116) //     timer.stop();
816a254c (migunasekera      2019-03-04 19:06:42 -0500 117) // }
816a254c (migunasekera      2019-03-04 19:06:42 -0500 118) // timer
816a254c (migunasekera      2019-03-04 19:06:42 -0500 119) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500 120) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500 121) };
816a254c (migunasekera      2019-03-04 19:06:42 -0500 122) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500 123) function bulletPoint(medInfo){
816a254c (migunasekera      2019-03-04 19:06:42 -0500 124)   // if (typeof(medInfo[0] == "undefined")){
816a254c (migunasekera      2019-03-04 19:06:42 -0500 125)   //   return
816a254c (migunasekera      2019-03-04 19:06:42 -0500 126)   // }
816a254c (migunasekera      2019-03-04 19:06:42 -0500 127)   // else {
816a254c (migunasekera      2019-03-04 19:06:42 -0500 128) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500 129)   // }
816a254c (migunasekera      2019-03-04 19:06:42 -0500 130)   
816a254c (migunasekera      2019-03-04 19:06:42 -0500 131)   document.getElementById('patient_info').innerHTML += '<li>' + medInfo[0] + ' ' + '<strong>' + medInfo[1] + '</strong>' + '</li>';
816a254c (migunasekera      2019-03-04 19:06:42 -0500 132) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500 133) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500 134) }
816a254c (migunasekera      2019-03-04 19:06:42 -0500 135) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500 136) function getMedicationInfo(medEntry){
816a254c (migunasekera      2019-03-04 19:06:42 -0500 137)   if(medEntry == null) {
816a254c (migunasekera      2019-03-04 19:06:42 -0500 138)     return}
816a254c (migunasekera      2019-03-04 19:06:42 -0500 139)   else{
816a254c (migunasekera      2019-03-04 19:06:42 -0500 140)     try {
816a254c (migunasekera      2019-03-04 19:06:42 -0500 141)       var med = medEntry.resource.medicationCodeableConcept.text
816a254c (migunasekera      2019-03-04 19:06:42 -0500 142)       var status = medEntry.resource.status
816a254c (migunasekera      2019-03-04 19:06:42 -0500 143) 
816a254c (migunasekera      2019-03-04 19:06:42 -0500 144)     }
816a254c (migunasekera      2019-03-04 19:06:42 -0500 145)     
816a254c (migunasekera      2019-03-04 19:06:42 -0500 146)     catch(err) {
816a254c (migunasekera      2019-03-04 19:06:42 -0500 147)       return
816a254c (migunasekera      2019-03-04 19:06:42 -0500 148)     } 
816a254c (migunasekera      2019-03-04 19:06:42 -0500 149)     
816a254c (migunasekera      2019-03-04 19:06:42 -0500 150) return [med, status];
816a254c (migunasekera      2019-03-04 19:06:42 -0500 151)   }
00000000 (Not Committed Yet 2019-03-04 20:40:20 -0500 152) };
